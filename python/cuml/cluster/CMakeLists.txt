# =============================================================================
# Copyright (c) 2022, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.
# =============================================================================


# todo: disable _mg for singlegpu
set(cython_sources
    agglomerative.pyx
    dbscan.pyx
    hdbscan.pyx
    kmeans.pyx
)

set(linked_libraries cuml::${CUML_CPP_TARGET})

if(NOT SINGLEGPU)
  list(APPEND cython_sources
       dbscan_mg.pyx
       kmeans_mg.pyx
  )

  list(APPEND linked_libraries
       cumlprims_mg::cumlprims_mg)
endif()

rapids_cython_create_modules(
  CXX
  SOURCE_FILES "${cython_sources}"
  LINKED_LIBRARIES "${linked_libraries}"
)

# TODO: Finding NumPy currently requires finding Development due to a bug in CMake. This bug was
# fixed in https://gitlab.kitware.com/cmake/cmake/-/merge_requests/7410 and will be available in
# CMake 3.24, so we can remove the Development component once we upgrade to CMake 3.24.
find_package(Python REQUIRED COMPONENTS Development NumPy)
set(targets_using_numpy
    agglomerative
    dbscan
    hdbscan
    kmeans)
if(NOT SINGLEGPU)
  list(APPEND targets_using_numpy
       dbscan_mg
       kmeans_mg
  )
endif()
foreach(target IN LISTS targets_using_numpy)
  target_include_directories(${target} PRIVATE "${Python_NumPy_INCLUDE_DIRS}")
endforeach()

foreach(cython_module IN LISTS RAPIDS_CYTHON_CREATED_TARGETS)
  set_target_properties(${cython_module} PROPERTIES INSTALL_RPATH "\$ORIGIN;\$ORIGIN/cpp")
endforeach()
