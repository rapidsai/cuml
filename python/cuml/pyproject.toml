# Copyright (c) 2022, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[build-system]
build-backend = "rapids_build_backend.build"
requires = [
    "rapids-build-backend>=0.3.0,<0.4.0.dev0",
    "scikit-build-core[pyproject]>=0.10.0",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.

[tool.pytest.ini_options]
markers = [
  "unit: Quickest tests focused on accuracy and correctness",
  "quality: More intense tests than unit with increased runtimes",
  "stress: Longest running tests focused on stressing hardware compute resources",
  "mg: Multi-GPU tests",
  "memleak: Test that checks for memory leaks",
  "no_bad_cuml_array_check: Test that should not check for bad CumlArray uses",
  "ucx: Run _only_ Dask UCX-Py tests",
  "ucxx: Run _only_ Dask UCXX tests",
]

testpaths = [
  "cuml/tests",
  "cuml/tests/dask",
  "cuml/tests/experimental",
  "cuml/tests/explainer",
  "cuml/tests/stemmer_tests",
]

filterwarnings = [
  "error::FutureWarning",
  "error::DeprecationWarning",
  "error:::cudf",
  "ignore:[^.]*ABCs[^.]*:DeprecationWarning:patsy[.*]",
  "ignore:(.*)alias(.*):DeprecationWarning:hdbscan[.*]",
  # TODO: https://github.com/rapidsai/cuml/issues/5878
  "ignore:.*ndarray.scatter_[(max|add)].* is deprecated:DeprecationWarning:cupyx",
  # TODO: https://github.com/rapidsai/cuml/issues/5879
  "ignore::FutureWarning:sklearn",
  "ignore::DeprecationWarning:sklearn",
  # https://github.com/pytest-dev/pytest-cov/issues/557
  "ignore:The --rsyncdir command line argument:DeprecationWarning",
  # https://github.com/scikit-learn/scikit-learn/pull/25157
  "ignore:.* is deprecated. Use files:DeprecationWarning",
  # https://github.com/scikit-learn/scikit-learn/pull/25741
  "ignore:`product` is deprecated as of NumPy 1.25.0:DeprecationWarning",
  # https://github.com/scikit-learn-contrib/hdbscan/pull/612
  "ignore:`alltrue` is deprecated as of NumPy 1.25.0:DeprecationWarning",
  # https://github.com/scikit-learn/scikit-learn/pull/26287
  "ignore:is_sparse is deprecated and will be removed:DeprecationWarning",
  # From dask-glm
  "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
  "ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning",
  "ignore:`rcond` parameter will change to the default:FutureWarning",
  "ignore:Dask configuration key 'fuse_ave_width':FutureWarning",
  # From hdbscan
  "ignore:Conversion of an array with ndim > 0:DeprecationWarning",
]

[project]
name = "cuml"
dynamic = ["version"]
description = "cuML - RAPIDS ML Algorithms"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [
    { name = "NVIDIA Corporation" },
]
license = { text = "Apache 2.0" }
requires-python = ">=3.10"
dependencies = [
    "cudf==24.12.*,>=0.0.0a0",
    "cupy-cuda11x>=12.0.0",
    "cuvs==24.12.*,>=0.0.0a0",
    "dask-cuda==24.12.*,>=0.0.0a0",
    "dask-cudf==24.12.*,>=0.0.0a0",
    "joblib>=0.11",
    "numba>=0.57",
    "numpy>=1.23,<3.0a0",
    "nvidia-cublas",
    "nvidia-cufft",
    "nvidia-curand",
    "nvidia-cusolver",
    "nvidia-cusparse",
    "packaging",
    "pylibraft==24.12.*,>=0.0.0a0",
    "raft-dask==24.12.*,>=0.0.0a0",
    "rapids-dask-dependency==24.12.*,>=0.0.0a0",
    "rmm==24.12.*,>=0.0.0a0",
    "scipy>=1.8.0",
    "treelite==4.3.0",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
test = [
    "cython>=3.0.0",
    "dask-ml",
    "hdbscan>=0.8.39,<0.8.40",
    "hypothesis>=6.0,<7",
    "nltk",
    "numpydoc",
    "pynndescent",
    "pytest-benchmark",
    "pytest-cases",
    "pytest-cov",
    "pytest-xdist",
    "pytest==7.*",
    "scikit-learn==1.5",
    "seaborn",
    "statsmodels",
    "umap-learn==0.5.6",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.

[project.urls]
Homepage = "https://github.com/rapidsai/cuml"
Documentation = "https://docs.rapids.ai/api/cuml/stable/"

[tool.black]
line-length = 79
target-version = ["py310"]
include = '\.py?$'
force-exclude = '''
_stop_words\.py |
_version\.py |
versioneer\.py |
/(
    \.eggs |
    \.git |
    \.hg |
    \.mypy_cache |
    \.tox |
    \.venv |
    _build |
    _thirdparty |
    buck-out |
    build |
    dist |
    thirdparty
)/
'''

[tool.rapids-build-backend]
build-backend = "scikit_build_core.build"
dependencies-file = "../../dependencies.yaml"
matrix-entry = "cuda_suffixed=true;use_cuda_wheels=true"
requires = [
    "cmake>=3.26.4,!=3.30.0",
    "cuda-python",
    "cuvs==24.12.*,>=0.0.0a0",
    "cython>=3.0.0",
    "ninja",
    "pylibraft==24.12.*,>=0.0.0a0",
    "rmm==24.12.*,>=0.0.0a0",
    "treelite==4.3.0",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.

[tool.scikit-build]
build-dir = "build/{wheel_tag}"
cmake.build-type = "Release"
cmake.version = "CMakeLists.txt"
minimum-version = "build-system.requires"
ninja.make-fallback = true
sdist.exclude = ["*tests*"]
sdist.reproducible = true
wheel.packages = ["cuml"]

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
input = "cuml/VERSION"
regex = "(?P<value>.*)"
