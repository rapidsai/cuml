# SPDX-FileCopyrightText: Copyright (c) 2022, NVIDIA CORPORATION.
# SPDX-License-Identifier: Apache-2.0

[build-system]
build-backend = "rapids_build_backend.build"
requires = [
    "rapids-build-backend>=0.4.0,<0.5.0.dev0",
    "scikit-build-core[pyproject]>=0.10.0",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.

[tool.pydistcheck]
select = [
    "distro-too-large-compressed",
]

# detect when package size grows significantly
max_allowed_size_compressed = '75MB'

[tool.pytest.ini_options]
addopts = "--tb=native --import-mode=append"

markers = [
  "unit: Quickest tests focused on accuracy and correctness",
  "quality: More intense tests than unit with increased runtimes",
  "stress: Longest running tests focused on stressing hardware compute resources",
  "mg: Multi-GPU tests",
  "memleak: Test that checks for memory leaks",
  "no_bad_cuml_array_check: Test that should not check for bad CumlArray uses",
  "ucx: Run _only_ Dask UCXX tests",
]

testpaths = [
  "cuml/tests",
  "cuml/tests/dask",
  "cuml/tests/experimental",
  "cuml/tests/explainer",
  "cuml/tests/stemmer_tests",
]

filterwarnings = [
  "error::FutureWarning",
  "error::DeprecationWarning",
  "error:::cudf",
  "ignore:[^.]*ABCs[^.]*:DeprecationWarning:patsy[.*]",
  "ignore:(.*)alias(.*):DeprecationWarning:hdbscan[.*]",
  # TODO: https://github.com/rapidsai/cuml/issues/5879
  "ignore::FutureWarning:sklearn",
  "ignore::DeprecationWarning:sklearn",
  # From sklearn
  "ignore:A column-vector y was passed:sklearn.exceptions.DataConversionWarning",
  # From dask-glm
  "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
  "ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning",
  "ignore:`rcond` parameter will change to the default:FutureWarning",
  "ignore:Dask configuration key 'fuse_ave_width':FutureWarning",
  # From dask/distributed
  "ignore:Dask annotations .* detected:UserWarning",
  "ignore:Sending large graph of size:UserWarning",
  # From hdbscan
  "ignore:Conversion of an array with ndim > 0:DeprecationWarning",
  # From umap-learn
  "ignore:Tensorflow not installed.*:ImportWarning:umap",
  # From sklearn estimator checks
  "ignore:Estimator .* does not inherit from.*:UserWarning",
  # From numba - GPU under-utilization warnings in tests with small data
  "ignore::numba.core.errors.NumbaPerformanceWarning",
  # Allow informational benchmark warnings (pytest-benchmark plugin)
  "default::pytest_benchmark.logger.PytestBenchmarkWarning",
]

[project]
name = "cuml"
dynamic = ["version"]
description = "cuML - RAPIDS ML Algorithms"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [
    { name = "NVIDIA Corporation" },
]
license = { text = "Apache-2.0" }
requires-python = ">=3.10"
dependencies = [
    "cuda-python>=13.0.1,<14.0a0",
    "cuda-toolkit[cublas,cufft,curand,cusolver,cusparse]>=12,<14",
    "cudf==25.12.*,>=0.0.0a0",
    "cupy-cuda13x>=13.6.0",
    "joblib>=0.11",
    "libcuml==25.12.*,>=0.0.0a0",
    "numba-cuda[cu13]>=0.19.1,<0.20.0a0",
    "numba>=0.60.0,<0.62.0a0",
    "numpy>=1.23,<3.0a0",
    "packaging",
    "pylibraft==25.12.*,>=0.0.0a0",
    "rich",
    "rmm==25.12.*,>=0.0.0a0",
    "scikit-learn>=1.4",
    "scipy>=1.8.0",
    "treelite",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
test = [
    "certifi",
    "cython>=3.0.0",
    "hdbscan>=0.8.39,<0.8.40",
    "hypothesis>=6.0,<7",
    "nltk",
    "numpydoc<1.9",
    "nvidia-ml-py>=12",
    "pynndescent",
    "pytest",
    "pytest-benchmark",
    "pytest-cases",
    "pytest-cov",
    "pytest-xdist",
    "pyyaml",
    "scikit-learn>=1.4",
    "seaborn",
    "statsmodels",
    "tenacity",
    "umap-learn==0.5.7",
    "xgboost>=2.1.0",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.
dask = [
    "dask-cudf==25.12.*,>=0.0.0a0",
    "raft-dask==25.12.*,>=0.0.0a0",
    "rapids-dask-dependency==25.12.*,>=0.0.0a0",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.
test-dask = [
    "dask-cuda==25.12.*,>=0.0.0a0",
    "dask-ml",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.

[project.urls]
Homepage = "https://github.com/rapidsai/cuml"
Documentation = "https://docs.rapids.ai/api/cuml/stable/"

[tool.black]
line-length = 79
target-version = ["py310"]
include = '\.py?$'
force-exclude = '''
_stop_words\.py |
_version\.py |
versioneer\.py |
/(
    \.eggs |
    \.git |
    \.hg |
    \.mypy_cache |
    \.tox |
    \.venv |
    _build |
    _thirdparty |
    buck-out |
    build |
    dist |
    thirdparty
)/
'''

[tool.isort]
profile = "black"
line_length = 79

[tool.rapids-build-backend]
build-backend = "scikit_build_core.build"
dependencies-file = "../../dependencies.yaml"
matrix-entry = "cuda_suffixed=true;use_cuda_wheels=true"
requires = [
    "cmake>=3.30.4",
    "cuda-python>=13.0.1,<14.0a0",
    "cython>=3.0.0",
    "libcuml==25.12.*,>=0.0.0a0",
    "libraft==25.12.*,>=0.0.0a0",
    "librmm==25.12.*,>=0.0.0a0",
    "ninja",
    "pylibraft==25.12.*,>=0.0.0a0",
    "rmm==25.12.*,>=0.0.0a0",
    "treelite",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.

[tool.scikit-build]
build-dir = "build/{wheel_tag}"
cmake.build-type = "Release"
cmake.version = "CMakeLists.txt"
minimum-version = "build-system.requires"
ninja.make-fallback = false
sdist.exclude = ["*tests*"]
sdist.reproducible = true
wheel.packages = ["cuml"]

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
input = "cuml/VERSION"
regex = "(?P<value>.*)"
