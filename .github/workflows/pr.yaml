name: pr

on:
  push:
    branches:
      - "pull-request/[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  telemetry-setup:
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
        OTEL_SERVICE_NAME: "pr-cuml"
    steps:
      - name: Telemetry setup
        if: ${{ vars.TELEMETRY_ENABLED == 'true' }}
        uses: rapidsai/shared-actions/telemetry-dispatch-stash-base-env-vars@main

  checks:
    secrets: inherit
    needs: telemetry-setup
    uses: rapidsai/shared-workflows/.github/workflows/checks.yaml@branch-25.06
    with:
      enable_check_generated_files: false
      ignored_pr_jobs: >-
        optional-job-conda-python-tests-cudf-pandas-integration telemetry-summarize

  conda-cpp-build:
    needs: checks
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-build.yaml@branch-25.06
    with:
      build_type: pull-request

  conda-python-build:
    needs: conda-cpp-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-build.yaml@branch-25.06
    with:
      build_type: pull-request

  changed-files:
    secrets: inherit
    needs: telemetry-setup
    uses: rapidsai/shared-workflows/.github/workflows/changed-files.yaml@branch-25.06
    with:
      files_yaml: |
        test_python:
          - '**'
          - '!.devcontainer/**'
          - '!.pre-commit-config.yaml'
          - '!CONTRIBUTING.md'
          - '!README.md'
          - '!docs/**'
          - '!img/**'
          - '!notebooks/**'
          - '!thirdparty/LICENSES/**'

  conda-python-scikit-learn-accel-tests:
    needs: [conda-python-build, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-tests.yaml@branch-25.06
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_python
    with:
      build_type: pull-request
      script: "ci/test_python_scikit_learn_tests.sh"
      # Select amd64 and one job per major CUDA version with the latest CUDA and Python versions
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([.CUDA_VER,.PY_VER]|map(split(".")|map(tonumber))))
