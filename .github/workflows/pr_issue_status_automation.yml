name: Set PR and Issue Project Fields

on:
  pull_request_target:
    # This job runs when a PR is first opened, or it is updated
    # Only runs if the PR is open (we don't want to update the status of a closed PR)
    types: [opened, edited, synchronize]

jobs:
    get-project-id:
      uses: rapidsai/shared-workflows/.github/workflows/project-get-item-id.yaml@branch-25.12
      if: github.event.pull_request.state == 'open'
      secrets: inherit
      permissions:
        contents: read
      with:
        PROJECT_ID: "PVT_kwDOAp2shc4AA8lR"
        ITEM_NODE_ID: "${{ github.event.pull_request.node_id }}"

    update-status:
      # This job sets the PR and its linked issues to "In Progress" status
      uses: rapidsai/shared-workflows/.github/workflows/project-get-set-single-select-field.yaml@branch-25.12
      if: ${{ github.event.pull_request.state == 'open' && needs.get-project-id.outputs.ITEM_PROJECT_ID != '' }}
      needs: get-project-id
      with:
        PROJECT_ID: "PVT_kwDOAp2shc4AA8lR"
        SINGLE_SELECT_FIELD_ID: "PVTSSF_lADOAp2shc4AA8lRzgAftsM"
        SINGLE_SELECT_FIELD_NAME: "Status"
        SINGLE_SELECT_OPTION_VALUE: "In Progress"
        ITEM_PROJECT_ID: "${{ needs.get-project-id.outputs.ITEM_PROJECT_ID }}"
        ITEM_NODE_ID: "${{ github.event.pull_request.node_id }}"
        UPDATE_ITEM: true
        UPDATE_LINKED_ISSUES: true
      secrets: inherit

    process-branch-name:
      if: ${{ github.event.pull_request.state == 'open' && needs.get-project-id.outputs.ITEM_PROJECT_ID != '' }}
      needs: get-project-id
      runs-on: ubuntu-latest
      outputs:
        branch-name: ${{ steps.process-branch-name.outputs.branch-name }}
      steps:
        - name: Extract branch name
          id: process-branch-name
          run: |
            branch=${{ github.event.pull_request.base.ref }}
            release=${branch#branch-}
            echo "branch-name=$release" >> "$GITHUB_OUTPUT"

    update-release:
      # This job sets the PR and its linked issues to the release they are targeting
      uses: rapidsai/shared-workflows/.github/workflows/project-get-set-single-select-field.yaml@branch-25.12
      if: ${{ github.event.pull_request.state == 'open' && needs.get-project-id.outputs.ITEM_PROJECT_ID != '' }}
      needs: [get-project-id, process-branch-name]
      with:
        PROJECT_ID: "PVT_kwDOAp2shc4AA8lR"
        SINGLE_SELECT_FIELD_ID: "PVTSSF_lADOAp2shc4AA8lRzgFqH3Y"
        SINGLE_SELECT_FIELD_NAME: "Release"
        SINGLE_SELECT_OPTION_VALUE: "${{ needs.process-branch-name.outputs.branch-name }}"
        ITEM_PROJECT_ID: "${{ needs.get-project-id.outputs.ITEM_PROJECT_ID }}"
        ITEM_NODE_ID: "${{ github.event.pull_request.node_id }}"
        UPDATE_ITEM: true
        UPDATE_LINKED_ISSUES: true
      secrets: inherit

    get-highest-priority:
      # This job gets the highest priority from linked issues
      if: ${{ github.event.pull_request.state == 'open' && needs.get-project-id.outputs.ITEM_PROJECT_ID != '' }}
      needs: get-project-id
      runs-on: ubuntu-latest
      permissions:
        contents: read
        pull-requests: read
      outputs:
        highest-priority: ${{ steps.get-priority.outputs.highest-priority }}
      steps:
        - name: Get highest priority from linked issues
          id: get-priority
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            PROJECT_ID: "PVT_kwDOAp2shc4AA8lR"
            ITEM_PROJECT_ID: "${{ needs.get-project-id.outputs.ITEM_PROJECT_ID }}"
          run: |
            # GraphQL query to get linked issues and their priority field values
            query='
            query($itemId: ID!) {
              node(id: $itemId) {
                ... on ProjectV2Item {
                  content {
                    ... on PullRequest {
                      closingIssuesReferences(first: 100) {
                        nodes {
                          id
                          projectItems(first: 100) {
                            nodes {
                              id
                              project {
                                id
                              }
                              fieldValueByName(name: "Priority") {
                                ... on ProjectV2ItemFieldSingleSelectValue {
                                  name
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }'

            # Execute query
            response=$(gh api graphql -f query="$query" -f itemId="$ITEM_PROJECT_ID")

            # Extract priorities from linked issues that are in the same project
            priorities=$(echo "$response" | jq -r '
              .data.node.content.closingIssuesReferences.nodes[]?.projectItems.nodes[]? |
              select(.project.id == env.PROJECT_ID) |
              .fieldValueByName.name // empty
            ')

            # Define priority order (adjust as needed for your project)
            # Higher number = higher priority
            declare -A priority_values=(
              ["P0"]=4
              ["P1"]=3
              ["P2"]=2
              ["P3"]=1
              ["P4"]=0
            )

            highest_priority=""
            highest_value=-1

            while IFS= read -r priority; do
              if [[ -n "$priority" ]]; then
                value=${priority_values[$priority]:-0}
                if (( value > highest_value )); then
                  highest_value=$value
                  highest_priority=$priority
                fi
              fi
            done <<< "$priorities"

            echo "highest-priority=$highest_priority" >> "$GITHUB_OUTPUT"
            echo "Found highest priority: $highest_priority"

    update-priority:
      # This job sets the PR priority to the highest priority of linked issues
      uses: rapidsai/shared-workflows/.github/workflows/project-get-set-single-select-field.yaml@branch-25.12
      if: ${{ github.event.pull_request.state == 'open' && needs.get-project-id.outputs.ITEM_PROJECT_ID != '' && needs.get-highest-priority.outputs.highest-priority != '' }}
      needs: [get-project-id, get-highest-priority]
      with:
        PROJECT_ID: "PVT_kwDOAp2shc4AA8lR"
        SINGLE_SELECT_FIELD_ID: "PVTSSF_lADOAp2shc4AA8lRzgAfu-Y"
        SINGLE_SELECT_FIELD_NAME: "Priority"
        SINGLE_SELECT_OPTION_VALUE: "${{ needs.get-highest-priority.outputs.highest-priority }}"
        ITEM_PROJECT_ID: "${{ needs.get-project-id.outputs.ITEM_PROJECT_ID }}"
        ITEM_NODE_ID: "${{ github.event.pull_request.node_id }}"
        UPDATE_ITEM: true
        UPDATE_LINKED_ISSUES: false
      secrets: inherit
