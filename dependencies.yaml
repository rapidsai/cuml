# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: conda
    matrix:
      cuda: ["11.8", "12.0"]
      arch: [x86_64]
    includes:
      - common_build
      - cudatoolkit
      - docs
      - py_build
      - py_run
      - py_version
      - test_python
  cpp_all:
    output: conda
    matrix:
      cuda: ["11.8", "12.0"]
      arch: [x86_64]
    includes:
      - common_build
      - cudatoolkit
  checks:
    output: none
    includes:
      - checks
      - py_version
  clang_tidy:
    output: conda
    matrix:
      cuda: ["11.8"]
      arch: [x86_64]
    includes:
      - clang_tidy
      - common_build
      - cudatoolkit
  docs:
    output: none
    includes:
      - cudatoolkit
      - docs
      - py_version
  test_cpp:
    output: none
    includes:
      - cudatoolkit
      - test_cpp
  test_python:
    output: none
    includes:
      - cudatoolkit
      - py_version
      - test_python
  test_notebooks:
    output: none
    includes:
      - cudatoolkit
      - py_run
      - py_version
      - test_notebooks
  py_build:
    output: pyproject
    extras:
      table: build-system
    includes:
      - common_build
      - py_build
  py_run:
    output: pyproject
    extras:
      table: project
    includes:
      - py_run
  py_test:
    output: pyproject
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python
channels:
  - rapidsai
  - rapidsai-nightly
  - dask/label/dev
  - conda-forge
  - nvidia
dependencies:
  checks:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
  clang_tidy:
    common:
      - output_types: [conda, requirements]
        packages:
          - clang==15.0.7
          - clang-tools==15.0.7
          - ninja
          - tomli
  common_build:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &cmake_ver cmake>=3.26.4
          - ninja
      - output_types: conda
        packages:
          - c-compiler
          - cxx-compiler
          - gmock>=1.13.0
          - gtest>=1.13.0
          - libcumlprims==23.8.*
          - libraft==23.8.*
          - libraft-headers==23.8.*
          - librmm==23.8.*
    specific:
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - gcc_linux-64=11.*
              - sysroot_linux-64==2.17
          - matrix:
              arch: aarch64
            packages:
              - gcc_linux-aarch64=11.*
              - sysroot_linux-aarch64==2.17
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
              cuda: "11.8"
            packages:
              - nvcc_linux-64=11.8
          - matrix:
              arch: aarch64
              cuda: "11.8"
            packages:
              - nvcc_linux-aarch64=11.8
          - matrix:
              arch: x86_64
              cuda: "12.0"
            packages:
              - cuda-nvcc
              - cuda-version=12.0
  py_build:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - scikit-build>=0.13.1
          - cython>=0.29,<0.30
          - &treelite treelite==3.2.0
          - pylibraft==23.8.*
          - rmm==23.8.*
      - output_types: pyproject
        packages:
          - wheel
          - setuptools
          - &treelite_runtime treelite_runtime==3.2.0
    specific:
      - output_types: [conda, requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.0"
            packages:
              - &cuda_python12 cuda-python>=12.0,<13.0a0
          - matrix: # All CUDA 11 versions
            packages:
              - &cuda_python11 cuda-python>=11.7.1,<12.0a0
  py_run:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - cudf==23.8.*
          - dask>=2023.5.1
          - dask-cuda==23.8.*
          - dask-cudf==23.8.*
          - distributed>=2023.5.1
          - joblib>=0.11
          - numba>=0.57
            # TODO: Is scipy really a hard dependency, or should
            # we make it optional (i.e. an extra for pip
            # installation/run_constrained for conda)?
          - scipy>=1.8.0
          - raft-dask==23.8.*
          - *treelite
      - output_types: [conda, requirements]
        packages:
          - cupy>=12.0.0
      - output_types: conda
        packages:
          - dask-core>=2023.5.1
      - output_types: pyproject
        packages:
          - *treelite_runtime
          - cupy-cuda11x>=12.0.0
    specific:
      - output_types: requirements
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - cupy-cuda115>=12.0.0
          - matrix:
              arch: aarch64
            packages:
              - cupy-cuda11x -f https://pip.cupy.dev/aarch64 # TODO: Verify that this works.
  cudatoolkit:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.0"
            packages:
              - cuda-version=12.0
              - cuda-cudart-dev
              - cuda-profiler-api
              - libcublas-dev
              - libcufft-dev
              - libcurand-dev
              - libcusolver-dev
              - libcusparse-dev
          - matrix:
              cuda: "11.8"
            packages:
              - cuda-version=11.8
              - cudatoolkit
              - libcublas-dev=11.11.3.6
              - libcublas=11.11.3.6
              - libcufft-dev=10.9.0.58
              - libcufft=10.9.0.58
              - libcurand-dev=10.3.0.86
              - libcurand=10.3.0.86
              - libcusolver-dev=11.4.1.48
              - libcusolver=11.4.1.48
              - libcusparse-dev=11.7.5.86
              - libcusparse=11.7.5.86
          - matrix:
              cuda: "11.5"
            packages:
              - cuda-version=11.5
              - cudatoolkit
              - libcublas-dev>=11.7.3.1,<=11.7.4.6
              - libcublas>=11.7.3.1,<=11.7.4.6
              - libcufft-dev>=10.6.0.54,<=10.6.0.107
              - libcufft>=10.6.0.54,<=10.6.0.107
              - libcurand-dev>=10.2.6.48,<=10.2.7.107
              - libcurand>=10.2.6.48,<=10.2.7.107
              - libcusolver-dev>=11.2.1.48,<=11.3.2.107
              - libcusolver>=11.2.1.48,<=11.3.2.107
              - libcusparse-dev>=11.7.0.31,<=11.7.0.107
              - libcusparse>=11.7.0.31,<=11.7.0.107
          - matrix:
              cuda: "11.4"
            packages:
              - cuda-version=11.4
              - cudatoolkit
              - &libcublas_dev114 libcublas-dev>=11.5.2.43,<=11.6.5.2
              - &libcublas114 libcublas>=11.5.2.43,<=11.6.5.2
              - &libcufft_dev114 libcufft-dev>=10.5.0.43,<=10.5.2.100
              - &libcufft114 libcufft>=10.5.0.43,<=10.5.2.100
              - &libcurand_dev114 libcurand-dev>=10.2.5.43,<=10.2.5.120
              - &libcurand114 libcurand>=10.2.5.43,<=10.2.5.120
              - &libcusolver_dev114 libcusolver-dev>=11.2.0.43,<=11.2.0.120
              - &libcusolver114 libcusolver>=11.2.0.43,<=11.2.0.120
              - &libcusparse_dev114 libcusparse-dev>=11.6.0.43,<=11.6.0.120
              - &libcusparse114 libcusparse>=11.6.0.43,<=11.6.0.120
          - matrix:
              cuda: "11.2"
            packages:
              - cuda-version=11.2
              - cudatoolkit
              # The NVIDIA channel doesn't publish pkgs older than 11.4 for these libs,
              # so 11.2 uses 11.4 packages (the oldest available).
              - *libcublas_dev114
              - *libcublas114
              - *libcufft_dev114
              - *libcufft114
              - *libcurand_dev114
              - *libcurand114
              - *libcusolver_dev114
              - *libcusolver114
              - *libcusparse_dev114
              - *libcusparse114
  docs:
    common:
      - output_types: [conda, requirements]
        packages:
          - graphviz
          - ipython
          - ipykernel
          - nbsphinx
          - numpydoc
          - pydata-sphinx-theme
          - recommonmark
          - &scikit_learn scikit-learn==1.2
          - sphinx<6
          - sphinx-copybutton
          - sphinx-markdown-tables
      - output_types: conda
        packages:
          - doxygen=1.8.20 # pre-commit hook needs a specific version.
  py_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              py: "3.9"
            packages:
              - python=3.9
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
            packages:
              - python>=3.9,<3.11
  test_cpp:
    common:
      - output_types: conda
        packages:
          - *cmake_ver
  test_python:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - dask-ml
          - hypothesis>=6.0,<7
          - nltk
          - numpydoc
          - pytest
          - pytest-benchmark
          - pytest-cases
          - pytest-cov
          - pytest-xdist
          - seaborn
          - *scikit_learn
          - statsmodels
          - umap-learn==0.5.3
          - pynndescent==0.5.8
      - output_types: conda
        packages:
          - pip
          - pip:
              # TODO: Figure out what to do with this dependency
              # since the repo is now archived.
              - git+https://github.com/dask/dask-glm@main
          # TODO: remove pin once a release that includes fixes for the error
          # is released: https://github.com/rapidsai/cuml/issues/5514
          - hdbscan<=0.8.30
      - output_types: pyproject
        packages:
          - dask-glm @ git+https://github.com/dask/dask-glm@main
            # TODO: Can we stop pulling from the master branch now that there was a release in October?
          - hdbscan @ git+https://github.com/scikit-learn-contrib/hdbscan.git@master
  test_notebooks:
    common:
      - output_types: [conda, requirements]
        packages:
          - jupyter
          - matplotlib
          - numpy
          - pandas
          - *scikit_learn
          - seaborn
